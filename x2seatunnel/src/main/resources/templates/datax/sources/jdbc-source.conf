#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# DataX Universal JDBC Source Template
# Supports all JDBC databases: MySQL, PostgreSQL, Oracle, SQL Server, etc.
# Template Type: JDBC Source (Unified Template)
# Version: 1.0

source {
  Jdbc {
    # ===== Required Parameters (SeaTunnel JdbcSourceConfig Requirements) =====
    # Database connection URL (required) - Source: DataX connection.jdbcUrl
    url = "{{ datax.job.content[0].reader.parameter.connection[0].jdbcUrl[0] }}"

    # Database driver class name (required) - Auto-inferred from jdbcUrl
    driver = "{{ datax.job.content[0].reader.parameter.connection[0].jdbcUrl[0] | jdbc_driver_mapper }}"

    # Database username (required) - Source: DataX username
    user = "{{ datax.job.content[0].reader.parameter.username }}"

    # Database password (required) - Source: DataX password
    password = "{{ datax.job.content[0].reader.parameter.password }}"

    # Query SQL (required) - Prefer querySql, otherwise generate from table+column+where
    query = "{{ datax.job.content[0].reader.parameter.querySql[0] | default('SELECT') }} {{ datax.job.content[0].reader.parameter.column | join(',') }} FROM {{ datax.job.content[0].reader.parameter.connection[0].table[0] }} WHERE {{ datax.job.content[0].reader.parameter.where | default('1=1') }}"
    
    # ===== Optional Parameters =====
    # Data partitioning configuration - Improve parallelism
    partition_column = "{{ datax.job.content[0].reader.parameter.splitPk | default('') }}"
    partition_num = {{ datax.job.setting.speed.channel | default(1) }}

    # Connection configuration
    connection_check_timeout_sec = 60
    max_retries = 3

    # Batch reading configuration
    fetch_size = {{ datax.job.content[0].reader.parameter.fetchSize | default(1024) }}

    # Result table name
    plugin_output = "jdbc_source_table"
    
  }
}

